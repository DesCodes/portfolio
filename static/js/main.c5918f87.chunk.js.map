{"version":3,"sources":["assests/profile.png","assests/simple restaurant.png","assests/restaurant locator.png","assests/robofriends app.png","Header.js","ProgressBar.js","Icons.js","ProgessBarAnimation.js","About.js","projectInfo.js","ProjectCard.js","ProjectCardAnimation.js","Projects.js","Contacts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","id","className","ProgressBar","props","viewBox","d","stroke","strokeWidth","fillOpacity","style","strokeDasharray","strokeDashoffset","library","add","fab","far","Icons","icon","ProgressBarAnimation","window","addEventListener","this","handleScroll","element","document","getElementById","bar","getElementsByClassName","innerHeight","scrollY","offsetHeight","scrollTop","i","classList","onScroll","React","Component","About","src","profile","alt","projectInfo","projectName","projectDescription","projectLive","sourceCode","projectImg","require","ProjectCard","map","project","key","href","rel","target","ProjectCardAnimation","card","console","log","Projects","Contact","method","action","htmlFor","type","name","required","placeholder","label","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5918f87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.50a3a36a.png\";","module.exports = __webpack_public_path__ + \"static/media/simple restaurant.94168837.png\";","module.exports = __webpack_public_path__ + \"static/media/restaurant locator.05dbdd06.png\";","module.exports = __webpack_public_path__ + \"static/media/robofriends app.3552bf5d.png\";","import React from 'react';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div id='headerSection' className='headerSection'>\r\n\t\t\t<h1>\r\n\t\t\t\tHello World! I'm \r\n\t\t\t\t<span> Desmond Tan</span>,\r\n\t\t\t\t<br/> the Developer you want on your team\r\n\t\t\t</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst ProgressBar = (props) => {\r\n\treturn (\r\n\t\t<svg id='progressContainer' viewBox=\"0 0 100 100\">\r\n\t\t  <path d=\"M 50,50 m 0,-47 a 47,47 0 1 1 0,94 a 47,47 0 1 1 0,-94\" stroke=\"#686F7A\" strokeWidth=\"5\" fillOpacity=\"0\"></path>\r\n\t\t  <path className='bar' d=\"M 50,50 m 0,-47 a 47,47 0 1 1 0,94 a 47,47 0 1 1 0,-94\" stroke=\"#46C28E\" strokeWidth=\"0\" fillOpacity=\"0\" \r\n\t\t  \tstyle={{strokeDasharray: `${props.strokeDasharray}`, \r\n\t\t  \tstrokeDashoffset: `${props.strokeDashoffset}`}}>\r\n\t  \t</path>\r\n\t\t</svg>\r\n\t)\r\n}\r\n\r\nexport default ProgressBar;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport { far } from '@fortawesome/free-regular-svg-icons';\r\nimport ProgressBar from './ProgressBar.js';\r\n \r\nlibrary.add(fab, far)\r\n\r\nconst Icons = () => {\r\n\treturn (\r\n\t\t<div id='icons' className='icons'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<FontAwesomeIcon className='html5' icon={['fab', 'html5']} />\r\n\t\t\t\t<ProgressBar strokeDasharray='340' strokeDashoffset='96' />\r\n\t\t\t</div>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<FontAwesomeIcon className='css3' icon={['fab', 'css3-alt']} />\r\n\t\t\t\t<ProgressBar strokeDasharray='340' strokeDashoffset='96' />\r\n\t\t\t</div>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<FontAwesomeIcon className='js' icon={['fab', 'js-square']} />\r\n\t\t\t\t<ProgressBar strokeDasharray='333' strokeDashoffset='95' />\r\n\t\t\t</div>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<FontAwesomeIcon className='react' icon={['fab', 'react']} />\t\r\n\t\t\t\t<ProgressBar strokeDasharray='310' strokeDashoffset='96' />\r\n\t\t\t</div>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<FontAwesomeIcon className='github' icon={['fab', 'github-square']} />\r\n\t\t\t\t<ProgressBar strokeDasharray='340' strokeDashoffset='96' />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Icons;","import React from 'react';\r\nimport Icons from './Icons.js';\r\n\r\nclass ProgressBarAnimation extends React.Component {\r\n\r\n  componentDidMount() {\r\n  \twindow.addEventListener('scroll', this.handleScroll)\r\n  }\r\n\r\n  handleScroll() {\r\n\t\tconst element = document.getElementById('icons');\r\n\t\tconst bar = document.getElementsByClassName('bar');\r\n    \r\n    if ((window.innerHeight - window.scrollY) <= (element.offsetHeight + element.scrollTop)) {\r\n      // console.log('bottom of page')\r\n      for(let i=0; i<5; i++) {\r\n      \tbar[i].classList.add('progressBar');\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"content-container\" onScroll={this.handleScroll}>\r\n        <Icons />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n \r\nexport default ProgressBarAnimation;","import React from 'react';\r\nimport profile from './assests/profile.png';\r\nimport Icons from './Icons.js';\r\nimport ProgressBarAnimation from './ProgessBarAnimation.js';\r\n\r\nconst About = () => {\r\n\treturn (\r\n\t\t<div id='aboutSection'className='aboutSection'>\r\n\t\t\t<div className='wrapper'>\r\n\t\t\t\t<h2>About</h2>\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<figure>\r\n\t\t\t\t\t\t<img className='aboutImg' src={profile} alt='developer profile' />\r\n\t\t\t\t\t</figure>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tI'm an ambitious problem solver that builds fully responsive websites from templates and loves being part of a team.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ProgressBarAnimation>\r\n\t\t\t\t\t<Icons />\r\n\t\t\t\t</ProgressBarAnimation>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default About;","export const projectInfo = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tprojectName: 'Simple Restaurant',\r\n\t\tprojectDescription: 'My final project from my web development fundamentals course at Juno, formly known as HackerYou. In this responsive website, I used CSS grid and flexbox to create the layout and JQuery to perform the actions within the menu buttons.',\r\n\t\tprojectLive: 'https://descodes.github.io/',\r\n\t\tsourceCode: 'https://github.com/DesCodes/Descodes.github.io',\r\n\t\tprojectImg: require('./assests/simple restaurant.png')\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tprojectName: 'Restaurant Locator',\r\n\t\tprojectDescription: 'A restaurant locator website that utilizes Yelp\\'s API to search nearby or by input. The search input will accept any cities, postal codes, zip codes, provinces, and or states from around the world.',\r\n\t\tprojectLive: 'https://descodes.github.io/API-project/',\r\n\t\tsourceCode: 'https://github.com/DesCodes/API-project',\r\n\t\tprojectImg: require('./assests/restaurant locator.png')\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tprojectName: 'Robofriends App',\r\n\t\tprojectDescription: 'An interactive and fully responsive application made with React. Any input received in the search input will instantly update the robot cards that matches the names of the robots.',\r\n\t\tprojectLive: 'https://descodes.github.io/robofriends-app/',\r\n\t\tsourceCode: 'https://github.com/DesCodes/robofriends-app',\r\n\t\tprojectImg: require('./assests/robofriends app.png')\r\n\t}\r\n];","import React from 'react';\r\n\r\nconst ProjectCard = ({ projectInfo }) => {\r\n\treturn (\r\n\t\tprojectInfo.map((project, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div key={i} className='projectCard card'>\r\n\t\t\t\t\t<h3>{projectInfo[i].projectName}</h3>\r\n\t\t\t\t\t<p>{projectInfo[i].projectDescription}</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<a className='seeLiveLink' href={projectInfo[i].projectLive} rel=\"noopener noreferrer\" target='_blank'>\r\n\t\t\t\t\t\t\t<button>\r\n\t\t\t\t\t\t\t\tSee Live\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t<a className='souceCodeLink' href={projectInfo[i].sourceCode} rel=\"noopener noreferrer\" target='_blank'>\r\n\t\t\t\t\t\t<button>\r\n\t\t\t\t\t\t\tSource Code\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<figure>\r\n\t\t\t\t\t\t<a className='hoverElement' href={projectInfo[i].projectLive} rel=\"noopener noreferrer\" target='_blank'>\r\n\t\t\t\t\t\t\t<img src={projectInfo[i].projectImg} alt=\"project preview\" />\r\n\t\t\t\t\t\t\t<p className='imgOverlayText'>View Live!</p>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</figure>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t})\r\n\t)\r\n}\r\n\r\nexport default ProjectCard;","import React from 'react';\r\nimport ProjectCard from './ProjectCard.js';\r\nimport { projectInfo } from './projectInfo.js';\r\n\r\nclass ProjectCardAnimation extends React.Component {\r\n  componentDidMount() {\r\n  \twindow.addEventListener('scroll', this.handleScroll)\r\n  }\r\n\r\n  handleScroll() {\r\n\t\tconst element = document.getElementById('projectSection');\r\n    const card = document.getElementsByClassName('card');\r\n\r\n    if ((window.innerHeight - window.scrollY) <= (element.scrollTop)) {\r\n      console.log('bottom of page')\r\n      for(let i=0; i<3; i++) {\r\n      \tcard[i].classList.add('projectCardAnimate');\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div \r\n      \tclassName=\"content-container\" \r\n      \tid='projectContent' \r\n      \tonScroll={this.handleScroll}\r\n    \t>\r\n        <ProjectCard projectInfo={projectInfo} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n \r\nexport default ProjectCardAnimation;","import React from 'react';\r\nimport { projectInfo } from './projectInfo.js';\r\nimport ProjectCard from './ProjectCard.js';\r\nimport ProjectCardAnimation from './ProjectCardAnimation.js';\r\n\r\nconst Projects = () => {\r\n\treturn (\r\n\t\t<div id='projectSection'className='projectSection'>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Projects</h2>\r\n\t\t\t\t<ProjectCardAnimation id='projectContent'>\r\n\t\t\t\t\t<ProjectCard projectInfo={ projectInfo } />\r\n\t\t\t\t</ProjectCardAnimation>\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\n\r\nconst Contact = () => {\r\n\treturn (\r\n\t\t<div className='contactSection'>\r\n\t\t\t<div className='wrapper'>\r\n\t\t\t\t<h2>Contact</h2>\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tFeel free to drop me a message.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<form method='POST' action='https://submit-form.com/FIoJCv9P4I5-GjBhuPlog'>\r\n\t\t\t\t\t\t<label htmlFor='name'>Name</label>\r\n\t\t\t\t\t\t<input type='name' name='userName' required={true} placeholder='Name' />\r\n\r\n\t\t\t\t\t\t<label htmlFor='email'>Email</label>\r\n\t\t\t\t\t\t<input type='email' name='userEmail' label='email' required={true} placeholder='Email' />\r\n\r\n\t\t\t\t\t\t<label htmlFor='message'>Message</label>\r\n\t\t\t\t\t\t<textarea placeholder='Message' name='userMessage' required={true} />\r\n\r\n\t\t\t\t\t\t<button type='submit'>Submit</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Header.js';\r\nimport About from './About.js';\r\nimport Projects from './Projects.js';\r\nimport Contact from './Contacts.js';\r\n// import { projectInfo } from './projectInfo.js';\r\n\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t\t<div>\r\n\t      <Header />\r\n\r\n\t      <About />\r\n\r\n\t      <Projects />\r\n\r\n\t      <Contact />\r\n\t    </div>\r\n\t)\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import formSubmission from './formSubmission.js';\n// import 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}